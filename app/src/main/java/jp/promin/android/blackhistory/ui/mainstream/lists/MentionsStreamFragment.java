package jp.promin.android.blackhistory.ui.mainstream.lists;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.widget.ListView;import com.squareup.otto.Subscribe;import java.util.List;import jp.promin.android.blackhistory.event.TwitterStreamEvent;import jp.promin.android.blackhistory.ui.common.CommonStreamFragment;import jp.promin.android.blackhistory.ui.mainstream.TweetAdapter;import twitter4j.Status;import twitter4j.Twitter;import twitter4j.TwitterException;final public class MentionsStreamFragment extends CommonStreamFragment {    @Nullable    public static MentionsStreamFragment newInstance(@NonNull Long userId) {        if (2 > userId) return null;        MentionsStreamFragment fragment = new MentionsStreamFragment();        fragment.setArguments(userId, TimelineListType.Mentions);        return fragment;    }    @Override    public void response(ListView listView, TweetAdapter adapter, @NonNull List<Status> result) {        insertAllTweet(result);    }    @Nullable    @Override    public List<Status> call(Twitter twitter) throws TwitterException {        return twitter.getMentionsTimeline();    }    @Subscribe    public void OnTwitterReplyEvent(final TwitterStreamEvent event) {        // 1.このリストのオーナー宛の情報かどうかのチェック        if (event.getUserId() != getUserId()) return;        // 2. 自分宛てのリプじゃない時は何もしない        if (event.getStatus().getInReplyToUserId() != getUserId()) return;        insertTweet(event.getStatus());    }}